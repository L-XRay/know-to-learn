<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqupt.knowtolearn.dao.course.ICourseBaseDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cqupt.knowtolearn.model.po.course.CourseBase">
        <id column="id" property="id" />
        <result column="org_id" property="orgId" />
        <result column="name" property="name" />
        <result column="teachers" property="teachers" />
        <result column="tags" property="tags" />
        <result column="category" property="category" />
        <result column="description" property="description" />
        <result column="pic" property="pic" />
        <result column="create_date" property="createDate" />
        <result column="change_date" property="changeDate" />
        <result column="status" property="status" />
        <result column="publish_date" property="publishDate"/>
    </resultMap>

    <resultMap id="homeCourseMap" type="com.cqupt.knowtolearn.model.vo.HomeCourseVO">
        <result column="courseId" property="courseId" />
        <result column="courseName" property="courseName" />
        <result column="coverUrl" property="coverUrl" />
        <result column="publishTime" property="publishTime"/>
        <result column="orgId" property="orgId" />
        <result column="orgName" property="orgName" />
    </resultMap>

    <resultMap id="orgCourseMap" type="com.cqupt.knowtolearn.model.vo.OrgCourseVO">
        <result column="courseId" property="courseId" />
        <result column="courseName" property="courseName" />
        <result column="coverUrl" property="coverUrl" />
        <result column="publishTime" property="publishTime"/>
    </resultMap>

    <resultMap id="courseVoMap" type="com.cqupt.knowtolearn.model.vo.CourseVO">
        <result column="name" property="name" />
        <result column="introduction" property="introduction" />
        <result column="teachers" property="teachers" />
        <result column="tags" property="tags" />
        <result column="category" property="category" />
        <result column="pic" property="pic" />
        <result column="orgId" property="orgId" />
        <result column="orgName" property="orgName" />
        <result column="avatar" property="avatar" />
        <result column="isAuthor" property="isAuthor" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, org_id, name, teachers, tags, category, description, pic, create_date, change_date, publish_date, status
    </sql>

    <select id="randCourse" resultMap="homeCourseMap">
#         SELECT cb.id id,cb.name name,cb.teachers teachers,cb.pic,cb.publish_date publish_date,c.name org FROM course_base cb inner join company c on cb.company_id = c.id ORDER BY RAND() LIMIT 8
        SELECT cb.id courseId, cb.name courseName,cb.pic coverUrl,UNIX_TIMESTAMP(cb.publish_date) * 1000 publishTime,c.name orgName,c.id orgId FROM course_base cb inner join org c on cb.org_id = c.id where cb.status=6 ORDER BY RAND() LIMIT 8
    </select>

    <update id="alterState" parameterType="com.cqupt.knowtolearn.model.dto.AlterCourseStateDTO">
        UPDATE course_base
        SET status = #{afterState}
        WHERE id = #{courseId} AND status = #{beforeState}
    </update>

    <select id="selectOrgCourse" parameterType="java.lang.Integer" resultMap="orgCourseMap">
        select c.id   courseId,
               c.name courseName,
               c.pic coverUrl,
               UNIX_TIMESTAMP(c.publish_date) * 1000 publishTime
        from course_base c
                 inner join org o on c.org_id = o.id
        where o.id = #{orgId} order by c.publish_date desc
    </select>

    <select id="selectCourseVoById" parameterType="java.lang.Integer" resultMap="courseVoMap">
        select
               c.org_id orgId,
               c.name name,
               c.description introduction,
               c.category,
               c.pic,
               c.tags,
               c.teachers,
               o.name orgName,
               u.avatar,
               u.org_id = #{orgId} isAuthor
        from course_base c
                 inner join org o on o.id = c.org_id
                 inner join user u on o.id = u.org_id
        where c.id = #{courseId}
    </select>

    <select id="selectCourseIsOwn" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select u.org_id = #{orgId}
        from course_base c
                 inner join org o on o.id = c.org_id
                 inner join user u on o.id = u.org_id
        where c.id = #{courseId}
    </select>

    <select id="selectCourseList" parameterType="java.lang.String" resultMap="homeCourseMap">
        SELECT cb.id courseId, cb.name courseName,cb.pic coverUrl,UNIX_TIMESTAMP(cb.publish_date) * 1000 publishTime,c.name orgName,c.id orgId
        FROM course_base cb inner join org c on cb.org_id = c.id
        where cb.status=6
        <trim prefix="and" prefixOverrides="AND | OR" suffixOverrides="and">
            <if test="null != key">
                cb.name like concat('%',#{key},'%')
                or c.name like concat('%',#{key},'%')
                or cb.tags like concat('%',#{key},'%')
                or cb.teachers like concat('%',#{key},'%')
            </if>
        </trim>
    </select>
</mapper>
